pipeline {
    agent any
    
    parameters {
        choice(
            choices: ['Baseline', 'APIS', 'Full'],
            description: 'Type of scan that is going to perform inside the container',
            name: 'SCAN_TYPE'
        )
        string(
            defaultValue: 'https://medium.com/',
            description: 'Target URL to scan',
            name: 'TARGET'
        )
        booleanParam(
            defaultValue: true,
            description: 'Parameter to know if you want to generate a report.',
            name: 'GENERATE_REPORT'
        )
    }
    
    stages {
        stage('Setting up OWASP ZAP docker container') {
            steps {
                echo 'Pulling up last OWASP ZAP container --> Start'
                sh 'docker pull zaproxy/zap-stable:latest'
                echo 'Pulling up last OWASP ZAP container --> End'
                echo 'Starting container --> Start'
                sh 'docker run -dt --name owasp zaproxy/zap-stable /bin/bash'
                echo 'Starting container --> End'
            }
        }

        stage('Prepare wrk directory') {
            when {
                environment name: 'GENERATE_REPORT', value: 'true'
            }
            steps {
                script {
                    // Create a Folder /zap/wrk then copy context file to Folder.
                    sh '''
                        docker exec owasp \
                        mkdir -p /zap/wrk
                        docker cp ${WORKSPACE}/<context file> owasp:/path/to/<context file>
                    '''
                }
            }
        }

        stage('Scanning target on OWASP container') {
            steps {
                script {
                    scan_type = "${params.SCAN_TYPE}"
                    echo "----> scan_type: $scan_type"
                    target = "${params.TARGET}"
                    if (scan_type == 'Baseline') {
                        sh """
                            docker exec owasp \
                            zap-baseline.py \
                            -t $target \
                            -n ./<context file> \
                            -U tuanh \
                            -r ./report.html \
                            -I
                        """
                    } else if (scan_type == 'APIS') {
                        sh """
                            docker exec owasp \
                            zap-api-scan.py \
                            -t $target \
                            -n ./<context file> \
                            -U <name of user> \
                            -r ./report.html \
                            -I
                        """
                    } else if (scan_type == 'Full') {
                        sh """
                            docker exec owasp \
                            zap-full-scan.py \
                            -t $target \
                            -n ./<context file> \
                            -U <name of user> \
                            -r ./report.html \
                            -I
                        """
                    } else {
                        echo 'Something went wrong...'
                    }
                }
            }
        }

        stage('Copy Report to Workspace') {
            steps {
                script {
                    sh '''
                        echo Workspace la: ${WORKSPACE}
                        docker cp owasp:/zap/wrk/report.html ${WORKSPACE}/report.html
                    '''
                }
            }
        }
        
        post {
            always {
                echo 'Removing container'
                sh '''
                    docker stop owasp
                    docker rm owasp
                '''
                cleanWs() //clean workspace after using
            }
        }
    }
}
